using Sms.Entity;

namespace Sms.Adapter;

public static class LodgingReservationCleaner
{
    public static LodgingReservation Clean(LodgingReservation source)
    {

        var destination = new LodgingReservation
        {
            guestNum = source.guestNum.Trim(),
            level = source.level.Trim(),
            resno = source.resno.Trim(),
            arrival = source.arrival,
            depart = new DateTime( source.depart.Year, source.depart.Month, source.depart.Day),
            unit = source.unit.Trim(),
            anum = source.anum,
            cnum = source.cnum,
            units = source.units,
            agent = source.agent.Trim(),
            nights = source.nights,
            booking = source.booking,
            disc = source.disc,
            grat = source.grat,
            subtotal = source.subtotal,
            extras = source.extras,
            taxes = source.taxes,
            total = source.total,
            charges = source.charges,
            payments = source.payments,
            balance = source.balance,
            lastuser = source.lastuser.Trim(),
            lastedit = source.lastedit,
            rsource = source.rsource.Trim(),
            package = source.package.Trim(),
            mrkt = source.mrkt.Trim(),
            submarket = source.submarket.Trim(),
            version = source.version.Trim(),
            group = source.group.Trim(),
            op = source.op.Trim(),
            onum = source.onum,
            RSECY = source.RSECY.Trim(),
            CurrentUpdateDate = source.CurrentUpdateDate,
            ConfNum = source.ConfNum.Trim(),
            ConfSystem = source.ConfSystem.Trim(),
            Special = source.Special.Trim(),
            depamt = source.depamt,
            depamt2 = source.depamt2,
            unitrtbase = source.unitrtbase.Trim(),
            discountPercentage = source.discountPercentage,
            ReservationName = source.ReservationName.Trim(),
            depdue = source.depdue,
            depdue2 = source.depdue2,
            dialed = source.dialed.Trim(),
            ptyp = source.ptyp.Trim(),
            guar = source.guar.Trim(),
            name2 = source.name2.Trim(),
            rnotes = source.rnotes.Trim(),
            suprate = source.suprate.Trim(),
            meal = source.meal.Trim(),
            rcorp = source.rcorp.Trim(),
            featrs = source.featrs.Trim(),
            CancelDate = source.CancelDate,
            hnotes = source.hnotes.Trim(),
            anotes = source.anotes.Trim(),
            shrinh = source.shrinh.Trim(),
            unitname = source.unitname.Trim(),
            grptotal = source.grptotal,
            crptotal = source.crptotal,
            upgrade = source.upgrade.Trim(),
            ESTARR = source.ESTARR.Trim(),
            CHOUTTIME = source.CHOUTTIME.Trim(),
            share = source.share.Trim(),
            rdesc = source.rdesc.Trim(),
            rtext = source.rtext.Trim(),
            ratetypr = source.ratetypr.Trim(),
            rfeatrs = source.rfeatrs.Trim(),
            RTWEBTEXT = source.RTWEBTEXT.Trim(),
            rcancpol = source.rcancpol.Trim(),
            rdep1pol = source.rdep1pol.Trim(),
            rdep2pol = source.rdep2pol.Trim(),
            grpcontact = source.grpcontact.Trim(),
            grpname = source.grpname.Trim(),
            grpcity = source.grpcity.Trim(),
            grpstate = source.grpstate.Trim(),
            grprank = source.grprank.Trim(),
            contactphonenum = source.contactphonenum.Trim(),
            contactphonedescr = source.contactphonedescr.Trim(),
            taname = source.taname.Trim(),
            tacontact = source.tacontact.Trim(),
            tacity = source.tacity.Trim(),
            tastate = source.tastate.Trim(),
        };
        return destination;
    }
}
